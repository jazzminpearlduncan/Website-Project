[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "Website-Project.html",
    "href": "Website-Project.html",
    "title": "Website-Project",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "Website-Project.html#quarto",
    "href": "Website-Project.html#quarto",
    "title": "Website-Project",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Refuel Your Mind: Circle K for the Soul",
    "section": "",
    "text": "Although this site only contains classwork now, I hope to further develop it as a landing page for my art portfolio, contains poetry, documentaries, digital art, and motion pictures, along with my more pride-inducing research papers, and perhaps, even a resume."
  },
  {
    "objectID": "Citations.html",
    "href": "Citations.html",
    "title": "DS Project1 Citations",
    "section": "",
    "text": "To learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "Database1.html",
    "href": "Database1.html",
    "title": "dataset 1",
    "section": "",
    "text": "library(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(stringr)\ncheeses &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-06-04/cheeses.csv')\n\nRows: 1187 Columns: 19\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (17): cheese, url, milk, country, region, family, type, fat_content, cal...\nlgl  (2): vegetarian, vegan\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncheese_important &lt;- cheeses |&gt; \n  select(cheese, milk, country, color) |&gt;\n  filter(!is.na(milk), !str_detect(country, \",\"), !str_detect(milk, \",\"))\n\n         \ncheese_summary &lt;- cheese_important |&gt; \n  group_by(country, milk) |&gt; \n  summarize(num_cheeses = n(), .groups = \"drop\") |&gt;\n  mutate(num_cheese = as.integer(num_cheeses)) |&gt;\n  filter(num_cheese &gt; 1)\ncheese_summary \n\n# A tibble: 52 × 4\n   country   milk  num_cheeses num_cheese\n   &lt;chr&gt;     &lt;chr&gt;       &lt;int&gt;      &lt;int&gt;\n 1 Australia cow            33         33\n 2 Australia goat           15         15\n 3 Austria   cow            14         14\n 4 Belgium   cow             8          8\n 5 Brazil    cow             4          4\n 6 Canada    cow            43         43\n 7 Canada    goat            9          9\n 8 Canada    sheep           2          2\n 9 Denmark   cow             7          7\n10 England   cow            29         29\n# ℹ 42 more rows\n\n\n\nlibrary(ggplot2)\n\nggplot(cheese_summary, aes(x = reorder(country, -(num_cheeses)), y = num_cheeses, fill = milk)) +\n  geom_bar(stat = \"identity\") +\n  facet_wrap(~milk, scales = \"free_y\") +\n  coord_flip() +\n  labs(title = \"Magnitude of Cheese Production Methods by Country\",\n       x = \"Country\",\n       y = \"Amount of Cheese\",\n       fill = \"Cheese Type\") +\n  theme(\n    text = element_text(size = 12),\n    axis.text.y = element_text(size = 8),\n    axis.text.x = element_text(size = 10),\n    strip.text = element_text(size = 10, face = \"bold\"))\n\n\n\n\n\n\n\nggsave(\"Cheese Production.jpeg\", width = 12, height = 8, dpi = 300)"
  },
  {
    "objectID": "Database2.html",
    "href": "Database2.html",
    "title": "dataset 2",
    "section": "",
    "text": "library(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(readr)\n\nsummer_movies &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-07-30/summer_movies.csv')\n\nRows: 905 Columns: 10\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (6): tconst, title_type, primary_title, original_title, genres, simple_t...\ndbl (4): year, runtime_minutes, average_rating, num_votes\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nimportant_movies &lt;- summer_movies |&gt;\n  mutate(years = year) |&gt;\n  select(years, runtime_minutes, average_rating) |&gt;\n  filter(years&gt;1945, !is.na(years), !is.na(runtime_minutes), !is.na(average_rating)) \n  \n\nimportant_movies\n\n# A tibble: 843 × 3\n   years runtime_minutes average_rating\n   &lt;dbl&gt;           &lt;dbl&gt;          &lt;dbl&gt;\n 1  1946             102            6.1\n 2  1946             150            7.5\n 3  1947              88            5.8\n 4  1948              93            5.7\n 5  1949             102            7.1\n 6  1951              87            5.7\n 7  1950             108            7.1\n 8  1951             125            8.1\n 9  1951             103            6.8\n10  1951              96            7.5\n# ℹ 833 more rows\n\n\n\nlibrary(ggplot2)\nggplot(data=important_movies, aes(x = years, y = runtime_minutes, color = average_rating)) +\n  geom_point() +\n  labs(\n    title = \"Changes in Movie Runtime (1945-2024)\",\n       x = \"Year\",\n       y = \"Runtime (min)\")\n\n\n\n\n\n\n\ncolnames(summer_movies)\n\n [1] \"tconst\"          \"title_type\"      \"primary_title\"   \"original_title\" \n [5] \"year\"            \"runtime_minutes\" \"genres\"          \"simple_title\"   \n [9] \"average_rating\"  \"num_votes\""
  }
]